@model IEnumerable<iBalekaWeb.Models.Route>
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Saved Routes";


}
<div class="row" style="padding-bottom:-5% !important;">
    <div class="col s12">
        <div class="card white black-text">
            <div class="card-content black-text">
      
                      
                        <div class="list centered" style="padding-right:5%">
                            <p id="eventTiteText" class="card-title center-align">
                                @UserManager.GetUserName(User)
                                here is a list of your routes.
                                <br />
                                You currently have : @Model.Count() Routes
                            </p>
                            <div class="fixed-action-btn vertical click-to-toggle right" style="position:relative !important; margin-top:-6%;">
                                <a class="btn btn-floating btn-large white accent-4">
                                    <i class="material-icons" style="color:teal">add</i>
                                </a>
                                <ul class="statsMenu" style="top:115% !important;">
                                    <li><a asp-action="Map" asp-controller="Map" class="btn btn-floating tooltipped white accent-4" data-position="left" data-delay="150" data-tooltip="Create Route"><i class="material-icons" style="color:teal">room</i></a></li>
                                    <li><a asp-action="CreateEvent" asp-controller="Event" class="btn btn-floating tooltipped white accent-4" data-position="left" data-delay="150" data-tooltip="Create Event"><i class="material-icons" style="color:teal">event</i></a></li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="card-action">
                        <div class="row">
                            <div class="col s12">
                                <h6 class="center">Sort Routes by:</h6>
                                <ul class="white accent-4 tabs">
                                    <li class="tab col s4"><a class="active black-text" href="#distance">Distance</a></li>
                                    <li class="tab col s4"><a class="black-text" href="#popularity">Popularity</a></li>
                                </ul><br />
                                <div class="row">
                                    <div class="col s12 center">
                                        <form asp-controller="Map" asp-action="SearchRoute" method="get">
                                            <div class="input-field col s12 center">
                                                <input id="searchEvent" type="text" class="validate" name="SearchTitle" required>
                                                <label for="searchEvents">Filter Route By Title</label>
                                                <input type="submit" value="Search" class="btn waves-effect waves-light btn-large teal lighten-1" />

                                            </div>
                                        </form>

                                    </div>

                                </div>


                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
   

<div class="row">
    <div id="distance">
        <div class="col s12">
            <ul class="white accent-4 tabs">
                <li class="tab col s4"><a class="active black-text" href="#highest">Highest</a></li>
                <li class="tab col s4"><a class="black-text" href="#lowest">Lowest</a></li>
            </ul>
        </div>
        <div id="highest">
            <div class="row">
                @if (ViewBag.DistanceHighest != null)
                {
                    <div class="row">
                        <ul class="collection">
                            @if ((ViewBag.DistanceHighest as IEnumerable<Route>).Count() > 0)
                            {
                                foreach (Route route in ViewBag.DistanceHighest)
                                {
                                    <li class="collection-item">
                                        <div>
                                            @Html.ActionLink(route.Title, "EditRoute", new { id = route.RouteId })
                                            @if (route.Distance > 999)
                                            {
                                                string totalDistance = Math.Round((route.Distance / 1000), 2).ToString();
                                                <span class="badge blue white-text" data-badge-caption="km" style="margin-right: 3%;">@totalDistance</span>
                                            }
                                            else
                                            {
                                                string totalDistance = totalDistance = route.Distance.ToString();
                                                <span class="badge blue white-text" data-badge-caption="m" style="margin-right: 3%;">@totalDistance</span>
                                            }
                                            <a class="secondary-content" href=@Url.Action("DeleteRoute", "Map", new { id = route.RouteId })>
                                                <i class="material-icons">
                                                    delete

                                                </i>
                                            </a>
                                        </div>
                                    </li>
                                }
                            }
                            else
                            {
                                <li class="mdl-typography--headline" style="text-align:center;">There are no Routes to Display</li>
                            }
                        </ul>
                    </div>
                }
                else
                {
                    <h6>No Routes To Display</h6>
                }
            </div>
        </div>
        <div id="lowest">
            @if (ViewBag.DistanceLowest != null)
            {
                <div class="row">
                    <ul class="collection">
                        @if ((ViewBag.DistanceLowest as IEnumerable<Route>).Count() > 0)
                        {
                            foreach (Route route in ViewBag.DistanceLowest)
                            {

                                <li class="collection-item">
                                    <div>
                                        @Html.ActionLink(route.Title, "EditRoute", new { id = route.RouteId })
                                        @if (route.Distance > 999)
                                        {
                                            string totalDistance = Math.Round((route.Distance / 1000), 2).ToString();
                                            <span class="badge blue white-text" data-badge-caption="km" style="margin-right: 3%;">@totalDistance</span>
                                        }
                                        else
                                        {
                                            string totalDistance = totalDistance = route.Distance.ToString();
                                            <span class="badge blue white-text" data-badge-caption="m" style="margin-right: 3%;">@totalDistance</span>
                                        }

                                        <a class="secondary-content" href=@Url.Action("DeleteRoute", "Map", new { id = route.RouteId })>
                                            <i class="material-icons">
                                                delete

                                            </i>
                                        </a>
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="mdl-typography--headline" style="text-align:center;">There are no Routes to Display</li>
                        }
                    </ul>
                </div>
            }
            else
            {
                <h6>No Routes To Display</h6>
            }
        </div>
    </div>
    <div id="popularity">
        <div class="col s12">
            <ul class="white accent-4 tabs">
                <li class="tab col s4"><a class="active black-text" href="#events">Events</a></li>
                <li class="tab col s4"><a class="black-text" href="#runs">Runs</a></li>
            </ul>
        </div>
        <div id="events">
            <div class="row">
                @if (ViewBag.Events != null)
                {
                    <div class="row">
                        <ul class="collection">
                            @if ((ViewBag.Events as IEnumerable<Route>).Count() > 0)
                            {
                                foreach (Route route in ViewBag.Events)
                                {
                                    <li class="collection-item">
                                        <div>
                                            @Html.ActionLink(route.Title, "EditRoute", new { id = route.RouteId })
                                            @if (route.Distance > 999)
                                            {
                                                string totalDistance = Math.Round((route.Distance / 1000), 2).ToString();
                                                <span class="badge blue white-text" data-badge-caption="km" style="margin-right: 3%;">@totalDistance</span>
                                            }
                                            else
                                            {
                                                string totalDistance = totalDistance = route.Distance.ToString();
                                                <span class="badge blue white-text" data-badge-caption="m" style="margin-right: 3%;">@totalDistance</span>
                                            }
                                            <span class="badge red white-text" data-badge-caption="Events" style="margin-right: 9%;">@route.EventCount</span>
                                            <a class="secondary-content" href=@Url.Action("DeleteRoute", "Map", new { id = route.RouteId })>
                                                <i class="material-icons">
                                                    delete

                                                </i>
                                            </a>
                                        </div>
                                    </li>
                                }
                            }
                            else
                            {
                                <li class="mdl-typography--headline" style="text-align:center;">There are no Routes to Display</li>
                            }
                        </ul>
                    </div>
                }
                else
                {
                    <h6>No Routes To Display</h6>
                }
            </div>
        </div>
        <div id="runs">
            @if (ViewBag.Runs != null)
            {
                <div class="row">
                    <ul class="collection">
                        @if ((ViewBag.Runs as IEnumerable<Route>).Count() > 0)
                        {
                            foreach (Route route in ViewBag.Runs)
                            {
                                <li class="collection-item">
                                    <div>
                                        @Html.ActionLink(route.Title, "EditRoute", new { id = route.RouteId })
                                        @if (route.Distance > 999)
                                        {
                                            string totalDistance = Math.Round((route.Distance / 1000), 2).ToString();
                                            <span class="badge blue white-text" data-badge-caption="km" style="margin-right: 3%;">@totalDistance</span>
                                        }
                                        else
                                        {
                                            string totalDistance = totalDistance = route.Distance.ToString();
                                            <span class="badge blue white-text" data-badge-caption="m" style="margin-right: 3%;">@totalDistance</span>
                                        }
                                        <span class="badge red white-text" data-badge-caption="Runs" style="margin-right: 9%;">@route.RunCount</span>
                                        <a class="secondary-content" href=@Url.Action("DeleteRoute", "Map", new { id = route.RouteId })>
                                            <i class="material-icons">
                                                delete

                                            </i>
                                        </a>
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="mdl-typography--headline" style="text-align:center;">There are no Routes to Display</li>
                        }
                    </ul>
                </div>
            }
            else
            {
                <h6>No Routes To Display</h6>
            }
        </div>
    </div>

</div>



@section Scripts {
    <script src=@Url.Content("~/js/ibalekaMap.js")></script>
    <script>
        $(document).ready(function () {
            var source = '@(ViewBag.SourcePageMap)';
            if (source == "Edit") {
                var $toastContent = $('<span>Route was successfully Updated...</span>');
                Materialize.toast($toastContent, 5000);
                source = null;
            }
            else if (source == "Add") {
                var $toastContent = $('<span>Route was successfully Added...</span>');
                Materialize.toast($toastContent, 5000);
                source = null;
            }
            else if (source == "Delete") {
                var $toastContent = $('<span>Route was successfully Deleted...</span>');
                Materialize.toast($toastContent, 5000);
                source = null;
            }
        });
    </script>
    <script>
        var hours = new Date().getHours();
        var message;
        var morning = ("Morning");
        var afternoon = ("Afternoon");
        var evening = ("Evening");

        if (hours > 0 && hours < 12) {
            message = morning;
        }
        else if (hours >= 12 && hours < 17) {
            message = afternoon;
        }
        else if (hours >= 17 && hours < 24) {
            message = evening;
        }

        $("#eventTiteText").prepend(message);

    </script>
}
